#BlueJ class context
comment0.target=Cliente
comment0.text=\n\ Clase\ Cliente\ que\ permite\ crear\ objetos\ del\ tipo\ Cliente.\n\ \n\ @author\ jose\ candia\n\ @version\ 1.0\n
comment1.params=p_nroDni\ p_apellido\ p_nombre\ p_importe
comment1.target=Cliente(int,\ java.lang.String,\ java.lang.String,\ double)
comment10.params=p_importe
comment10.target=double\ nuevoSaldo(double)
comment10.text=\n\ Metodo\ que\ asigna\ un\ nuevo\ saldo\ y\ lo\ devuelve\n\ \n\ @param\ \ p_importe\ Nuevo\ saldo\ \ \n\ @return\ \ \ \ \ (double)\ nuevo\ saldo\ \n
comment11.params=p_importe
comment11.target=double\ agregaSaldo(double)
comment11.text=\n\ Metodo\ que\ agrega\ un\ monto\ al\ saldo\ y\ lo\ devuelve\n\ \n\ @param\ \ p_importe\ saldo\ a\ agregar\ \ \n\ @return\ \ \ \ \ (double)\ nuevo\ saldo\ \n
comment12.params=
comment12.target=java.lang.String\ apeYnom()
comment12.text=\n\ Metodo\ que\ retorna\ apellido\ y\ nombre\ concatenados\ \n\ @return\ \ \ \ \ String\n
comment13.params=
comment13.target=java.lang.String\ nomYape()
comment13.text=\n\ Metodo\ que\ retorna\ nombre\ y\ apellido\ concatenados\ \n\ @return\ \ \ \ \ String\n
comment14.params=
comment14.target=void\ mostrar()
comment14.text=\n\ Metodo\ que\ proporciona\ una\ salida\ por\ pantalla\ de\ los\ datos\ del\ problema\n
comment2.params=
comment2.target=int\ getNroDni()
comment3.params=
comment3.target=java.lang.String\ getApellido()
comment4.params=
comment4.target=java.lang.String\ getNombre()
comment5.params=
comment5.target=double\ getSaldo()
comment6.params=p_nroDni
comment6.target=void\ setNroDni(int)
comment7.params=p_apellido
comment7.target=void\ setApellido(java.lang.String)
comment8.params=p_nombre
comment8.target=void\ setNombre(java.lang.String)
comment9.params=p_saldo
comment9.target=void\ setSaldo(double)
numComments=15
